name: MCP Compliance

on:
  push:
    branches: [ "main", "debug/*", "feature/*" ]
  pull_request:
    branches: [ main ]

jobs:
  mcp-compliance:
    name: MCP Protocol Compliance
    runs-on: ubuntu-latest

    steps:
      - name: Free disk space
        run: |
          echo "Disk space before cleanup:"
          df -h
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc || true
          sudo apt-get clean || true
          echo "Disk space after cleanup:"
          df -h

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.87.0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-1.87.0-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-1.87.0-

      - name: Install MCP Validator
        run: |
          echo "ðŸ“¦ Installing MCP Validator..."
          git clone --depth 1 https://github.com/Janix-ai/mcp-validator.git validator
          cd validator
          python3 -m venv venv
          source venv/bin/activate
          pip install --no-cache-dir -r requirements.txt
          echo "âœ… MCP Validator installed"

      - name: Install SDK dependencies
        working-directory: sdk
        run: npm ci --prefer-offline

      - name: Build bridge
        working-directory: sdk
        run: npm run build

      - name: Check disk space before validation
        run: |
          echo "Disk space before validation:"
          df -h

      - name: Run MCP compliance validation
        run: ./scripts/ensure_mcp_compliance.sh
        env:
          HTTP_PORT: 8080
          DATABASE_URL: "sqlite::memory:"
          PIERRE_MASTER_ENCRYPTION_KEY: "rEFe91l6lqLahoyl9OSzum9dKa40VvV5RYj8bHGNTeo="
          PIERRE_ALLOW_INTERACTIVE_OAUTH: "false"
          PIERRE_RSA_KEY_SIZE: "2048"

      - name: Clean up validation artifacts
        if: always()
        run: |
          rm -rf validator/reports/*.md 2>/dev/null || true
          rm -rf /tmp/pierre-mcp-server-*.log 2>/dev/null || true
          echo "Final disk space:"
          df -h

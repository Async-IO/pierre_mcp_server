name: Database Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'src/database**'
      - 'tests/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/database**'
      - 'tests/**'
      - 'Cargo.toml'
      - 'Cargo.lock'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  sqlite-tests:
    name: Database Tests (SQLite)
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-sqlite-${{ hashFiles('**/Cargo.lock') }}

    - name: Run all database tests with coverage (SQLite)
      run: cargo llvm-cov --all-targets --lcov --output-path lcov-db-sqlite.info
      env:
        DATABASE_URL: "sqlite::memory:"
        ENCRYPTION_KEY: "rEFe91l6lqLahoyl9OSzum9dKa40VvV5RYj8bHGNTeo="
        PIERRE_MASTER_ENCRYPTION_KEY: "rEFe91l6lqLahoyl9OSzum9dKa40VvV5RYj8bHGNTeo="
        STRAVA_CLIENT_ID: "test_client_id_ci"
        STRAVA_CLIENT_SECRET: "test_client_secret_ci"
        STRAVA_REDIRECT_URI: "http://localhost:8080/auth/strava/callback"
        RUST_LOG: "info"

    - name: Upload SQLite database coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: lcov-db-sqlite.info
        flags: database-sqlite
        name: database-sqlite-coverage
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false

  postgresql-tests:
    name: Database Tests (PostgreSQL)
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: pierre
          POSTGRES_PASSWORD: ci_test_password
          POSTGRES_DB: pierre_mcp_server
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-postgresql-${{ hashFiles('**/Cargo.lock') }}

    - name: Wait for PostgreSQL
      run: |
        echo "Waiting for PostgreSQL to be ready..."
        timeout 60 bash -c 'until pg_isready -h localhost -p 5432 -U pierre; do sleep 2; done'
        echo "PostgreSQL is ready!"

    - name: Test database connection
      run: |
        PGPASSWORD=ci_test_password psql -h localhost -U pierre -d pierre_mcp_server -c "SELECT 'PostgreSQL connection successful';"

    - name: Clean up any existing connections
      run: |
        PGPASSWORD=ci_test_password psql -h localhost -U pierre -d pierre_mcp_server -c "
          SELECT pg_terminate_backend(pid) 
          FROM pg_stat_activity 
          WHERE datname = 'pierre_mcp_server' 
            AND pid <> pg_backend_pid();"

    - name: Run all database tests with coverage (PostgreSQL)
      run: timeout 1200 cargo llvm-cov --all-targets --features postgresql --lcov --output-path lcov-db-postgres.info -- --test-threads=1
      timeout-minutes: 20
      env:
        DATABASE_URL: "postgresql://pierre:ci_test_password@localhost:5432/pierre_mcp_server"
        ENCRYPTION_KEY: "rEFe91l6lqLahoyl9OSzum9dKa40VvV5RYj8bHGNTeo="
        PIERRE_MASTER_ENCRYPTION_KEY: "rEFe91l6lqLahoyl9OSzum9dKa40VvV5RYj8bHGNTeo="
        STRAVA_CLIENT_ID: "test_client_id_ci"
        STRAVA_CLIENT_SECRET: "test_client_secret_ci"
        STRAVA_REDIRECT_URI: "http://localhost:8080/auth/strava/callback"
        # PostgreSQL connection pool configuration for CI
        PG_MAX_CONNECTIONS: "20"
        PG_MIN_CONNECTIONS: "1" 
        PG_ACQUIRE_TIMEOUT_SECS: "120"
        RUST_LOG: "info"

    - name: Upload PostgreSQL database coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: lcov-db-postgres.info
        flags: database-postgresql
        name: database-postgresql-coverage
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: false